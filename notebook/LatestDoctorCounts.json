{
	"name": "LatestDoctorCounts",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "azureDIY",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/9e5fd910-2fa6-4b1c-ad1a-596f02e9d94d/resourceGroups/azureDIY-RG-AUE/providers/Microsoft.Synapse/workspaces/azurediy-aue-sya/bigDataPools/azureDIY",
				"name": "azureDIY",
				"type": "Spark",
				"endpoint": "https://azurediy-aue-sya.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/azureDIY",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 6,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true,
					"tags": [
						"parameters"
					]
				},
				"source": [
					"path = \"GHODoctors\"\r\n",
					"filename = \"/LatestDoctorCounts.csv\""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"from pyspark.sql.types import *\r\n",
					"account_name = \"azurediyauedls\"\r\n",
					"container_name = \"raw\"\r\n",
					"relative_path = path\r\n",
					"adls_path = 'abfss://%s@%s.dfs.core.windows.net/%s' % (container_name, account_name, relative_path)\r\n",
					"\r\n",
					"doctorDF = spark.read.option('inferSchema', 'true') \\\r\n",
					"                .option('delimiter', ',') \\\r\n",
					"                .csv(adls_path + filename)"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"doctorSelect = doctorDF.select(\"_c3\",\"_c5\",\"_c15\")\r\n",
					"doctorLatest = doctorSelect.groupBy(\"_c3\").max(\"_c5\",\"_c15\")\r\n",
					"doctorLatest = doctorLatest.withColumnRenamed(\"_c3\",'COUNTRY').withColumnRenamed(\"max(_c5)\",'YEAR').withColumnRenamed(\"max(_c15)\",'DoctorsPer10k')\r\n",
					"display(doctorLatest)"
				],
				"execution_count": null
			}
		]
	}
}